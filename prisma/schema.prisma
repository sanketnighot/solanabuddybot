// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BotState {
  id        Int      @id @default(autoincrement())
  chatId    BigInt   @unique
  state     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id                Int             @id @default(autoincrement())
  username          String
  chatId            BigInt          @unique
  solanaAccount     SolanaAcc?
  subscribedTo      Subscription[]  @relation("UserSubscriptions")
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  airdropRequests   AirdropRequest[]

}

model SolanaAcc {
  id          Int       @id @default(autoincrement())
  userId      Int       @unique
  user        User      @relation(fields: [userId], references: [id])
  publicKey   String
  privateKey  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Subscription {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  subscribers User[]    @relation("UserSubscriptions")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model AirdropRequest {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
